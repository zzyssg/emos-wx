<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emoswx.db.dao.TbUserDao">
    <select id="haveRootUser" resultType="boolean">
        select if(count(*), TRUE, FALSE)
        from tb_user
        where root = 1
    </select>

    <!--TODO 此处为什么不写resultType-->
    <insert id="insert" parameterType="hashmap">
        insert into tb_user
        set
        <if test="openId!=null">
            open_id = #{openId},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email = #{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>

    <select id="searchIdByOpenid" parameterType="string" resultType="Integer">
        select id
        from tb_user
        where open_id = #{openId}
          and status = 1
    </select>

    <select id="searchUserPermissions" parameterType="int" resultType="String">
        select p.permission_name
        from tb_user u
                 left join tb_role r on JSON_CONTAINS(u.role, cast(r.id as char))
                 left join tb_permission p on JSON_CONTAINS(r.permissions, cast(p.id as char))
        where u.id = #{userId}
          and u.status = 1
    </select>

    <select id="searchById" parameterType="int" resultType="com.example.emoswx.db.pojo.TbUser">
        select id,
               open_id,
               nickname,
               photo,
               sex,
               tel,
               email,
               hiredate,
               role,
               root,
               dept_id,
               status,
               create_time
        from Tb_user
        where id = #{userId}
          and status = 1;
    </select>
    <select id="searchNameAndDept" parameterType="int" resultType="HashMap">
        select u.name, d.dept_name
        from tb_user u
                 left join tb_dept d
                           on u.dept_id = d.id
        where u.id = #{userId}
          and u.status = 1
    </select>

    <!--查询员工入职日期-->
    <select id="searchHiredate" parameterType="int" resultType="String">
        select hiredate
        from tb_user
        where id = #{userId}
    </select>

    <!--查询用户摘要-->
    <select id="searchUserSummary" parameterType="int" resultType="hashmap">
        select u.name, d.dept_name as deptName
        from tb_user u
                 left join tb_dept d
                           on u.dept_id = d.id
        where u.id = #{userId}
          and u.status = 1
    </select>

    <!--根据部门Id查询-->
    <select id="searchUserGroupByDept" parameterType="string" resultType="hashmap">
        select
        d.id as deptId,
        d.dept_name as deptName,
        u.id as userId,
        u.name
        u.id,u.name,u.photo,u.
        from tb_dept d
        join tb_user u
        on d.id = u.dept_id
        where u.status = 1
        <if test="keyword != null">
            and u.name like "%${keyword}%"
        </if>
        order by d.id,u.id

    </select>

    <!--查询成员-->
    <select id="searchMembers" parameterType="list" resultType="hashmap">
        select
        id,name,photo
        from tb_user u
        where status = 1
        and id in
        <foreach collection="list" item="one" open="(" separator="," close=")">
            #{one}
        </foreach>
    </select>

</mapper>